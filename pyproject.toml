[tool.poetry]
name = "project"
version = "0.1.0"
description = ""
authors = ["wangqs <wqs1639@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.73.0"
uvicorn = "^0.17.0"
httpx = { version = "^0.22.0", extras = ["http2", "socks"] }
hypercorn = "^0.13.2"
pretty-errors = "^1.2.25"
typer = { version = "^0.4.0", extras = ["all"] }
pyyaml = "5.3.1"
oss2 = "^2.16.0"
ruff = "^0.3.0"
types-pyyaml = "^6.0.12.12"
python-dateutil = "^2.9.0.post0"
types-python-dateutil = "^2.9.0.20240316"
xmltodict = "^0.13.0"
types-xmltodict = "^0.13.0.3"
beautifulsoup4 = "^4.12.3"
yagmail = "^0.15.293"
types-beautifulsoup4 = "^4.12.0.20240229"

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
mypy = "^1.9.0"
pre-commit = "^2.17.0"
ipython = "^8.0.1"


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 119
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
# docstring-code-line-length = "dynamic"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
[tool.mypy]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = false
exclude = ['^venv/', '^__init__\.py$']
explicit_package_bases = true

[[tool.mypy.overrides]]
module = [
    "uvicorn",
    "oss2",
    "yaml.*",
    "routers.*",
    "schemas.*",
    "settings",
    "models",
    "xmltodict",
    "yagmail",
    "bs4",
]
ignore_missing_imports = true
